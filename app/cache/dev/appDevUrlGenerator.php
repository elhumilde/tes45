<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * appDevUrlGenerator
 *
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appDevUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes = array(
        '_wdt' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:toolbarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_wdt',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_bar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchBarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search_bar',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_purge' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:purgeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/purge',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_info' => array (  0 =>   array (    0 => 'about',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:infoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'about',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler/info',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_phpinfo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:phpinfoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/phpinfo',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_results' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchResultsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/results',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_router' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.router:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/router',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception_css' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:cssAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception.css',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::checkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_step' => array (  0 =>   array (    0 => 'index',  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::stepAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'index',    ),    1 =>     array (      0 => 'text',      1 => '/_configurator/step',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_final' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::finalAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/final',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'workflowexecution' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\WorkflowExecutionController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/workflowexecution/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'workflowexecution_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\WorkflowExecutionController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/workflowexecution',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'workflowexecution_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\WorkflowExecutionController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/workflowexecution/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'workflowexecution_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\WorkflowExecutionController::createAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/workflowexecution/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'workflowexecution_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\WorkflowExecutionController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/workflowexecution',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'workflowexecution_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\WorkflowExecutionController::updateAction',  ),  2 =>   array (    '_method' => 'POST|PUT',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/workflowexecution',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'workflowexecution_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\WorkflowExecutionController::deleteAction',  ),  2 =>   array (    '_method' => 'POST|DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/workflowexecution',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'workflowexecution_etapeu' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\WorkflowExecutionController::etapeuAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/workflowexecution/etapeu',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'affectation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\AffectationEtapeUtilisateurController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/affectation/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'affectation_show' => array (  0 =>   array (    0 => 'id',    1 => 'uid',  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\AffectationEtapeUtilisateurController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'uid',    ),    1 =>     array (      0 => 'text',      1 => '/show',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/affectation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'affectation_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\AffectationEtapeUtilisateurController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/affectation/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'affectation_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\AffectationEtapeUtilisateurController::createAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/affectation/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'affectation_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\AffectationEtapeUtilisateurController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/affectation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'affectation_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\AffectationEtapeUtilisateurController::updateAction',  ),  2 =>   array (    '_method' => 'POST|PUT',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/affectation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'affectation_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\AffectationEtapeUtilisateurController::deleteAction',  ),  2 =>   array (    '_method' => 'POST|DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/affectation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'affectation_production' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\AffectationEtapeUtilisateurController::productionAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/affectation/production',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'affectation_form' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\AffectationEtapeUtilisateurController::formAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/affectation/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'affectation_form_text' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\AffectationEtapeUtilisateurController::textAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/affectation/text',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'affectation_form_fin' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\AffectationEtapeUtilisateurController::finAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/affectation/fin',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'affectation_detaill' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\AffectationEtapeUtilisateurController::detaillAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/affectation/detaill',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'boncommandeligne' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\BonCommandeLigneController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/boncommandeligne/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'boncommandeligne_affecter' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\BonCommandeLigneController::affecterAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/boncommandeligne/affecter',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'boncommandeligne_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\BonCommandeLigneController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/boncommandeligne',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'boncommandeligne_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\BonCommandeLigneController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/boncommandeligne/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'boncommandeligne_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\BonCommandeLigneController::createAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/boncommandeligne/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'boncommandeligne_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\BonCommandeLigneController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/boncommandeligne',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'boncommandeligne_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\BonCommandeLigneController::updateAction',  ),  2 =>   array (    '_method' => 'POST|PUT',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/boncommandeligne',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'boncommandeligne_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\BonCommandeLigneController::deleteAction',  ),  2 =>   array (    '_method' => 'POST|DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/boncommandeligne',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'boncommandeligne_production' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\BonCommandeLigneController::productionAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/boncommandeligne/production',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'boncommandeligne_recherche' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\BonCommandeLigneController::rechercheAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/boncommandeligne/recherche',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'vendeur' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\VendeurController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/vendeur/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'vendeur_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\VendeurController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/vendeur',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'vendeur_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\VendeurController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/vendeur/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'vendeur_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\VendeurController::createAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/vendeur/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'vendeur_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\VendeurController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/vendeur',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'vendeur_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\VendeurController::updateAction',  ),  2 =>   array (    '_method' => 'POST|PUT',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/vendeur',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'vendeur_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\VendeurController::deleteAction',  ),  2 =>   array (    '_method' => 'POST|DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/vendeur',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'clients' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\ClientsController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/clients/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'clients_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\ClientsController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/clients',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'clients_commande' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\ClientsController::commandeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/commande',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/clients',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'clients_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\ClientsController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/clients/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'clients_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\ClientsController::createAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/clients/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'clients_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\ClientsController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/clients',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'clients_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\ClientsController::updateAction',  ),  2 =>   array (    '_method' => 'POST|PUT',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/clients',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'clients_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\ClientsController::deleteAction',  ),  2 =>   array (    '_method' => 'POST|DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/clients',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'commande' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\BonCommandeController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/commande/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'commande_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\BonCommandeController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/commande',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'commande_produit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\BonCommandeController::produitAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/produit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/commande',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'commande_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\BonCommandeController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/commande/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'commande_wf' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\BonCommandeController::wfAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/commande/wf',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'commande_wc' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\BonCommandeController::wcAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/commande/wc',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'commande_recherche' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\BonCommandeController::rechercheAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/commande/recherche',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'commande_recherched' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\BonCommandeController::recherchedAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/commande/recherched',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'commande_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\BonCommandeController::createAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/commande/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'commande_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\BonCommandeController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/commande',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'commande_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\BonCommandeController::updateAction',  ),  2 =>   array (    '_method' => 'POST|PUT',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/commande',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'commande_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\BonCommandeController::deleteAction',  ),  2 =>   array (    '_method' => 'POST|DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/commande',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'commande_test' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\BonCommandeController::testAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/commande/test',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'commande_form_text' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\BonCommandeController::textAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/commande/text',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'commande_form_enligne' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\BonCommandeController::enligneAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/commande/enligne',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'commande_form_reunion' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\BonCommandeController::reunionAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/commande/reunion',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'commande_form_valider' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\BonCommandeController::validerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/commande/valider',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'commande_form_non' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\BonCommandeController::nonAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/commande/non',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'commande_valider' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\BonCommandeController::validersoftAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/commande/valider-soft',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'commande_non' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\BonCommandeController::nonsoftAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/commande/non-soft',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'commande_nond' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\BonCommandeController::nonsoftdAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/commande/non-softd',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'workflowetape' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\WorkflowEtapeController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/workflowetape/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'workflowetape_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\WorkflowEtapeController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/workflowetape',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'workflowetape_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\WorkflowEtapeController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/workflowetape/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'workflowetape_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\WorkflowEtapeController::createAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/workflowetape/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'workflowetape_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\WorkflowEtapeController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/workflowetape',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'workflowetape_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\WorkflowEtapeController::updateAction',  ),  2 =>   array (    '_method' => 'POST|PUT',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/workflowetape',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'workflowetape_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\WorkflowEtapeController::deleteAction',  ),  2 =>   array (    '_method' => 'POST|DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/workflowetape',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'produit' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\ParProduitController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/produit/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'produit_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\ParProduitController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/produit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'produit_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\ParProduitController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/produit/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'produit_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\ParProduitController::createAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/produit/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'produit_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\ParProduitController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/produit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'produit_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\ParProduitController::updateAction',  ),  2 =>   array (    '_method' => 'POST|PUT',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/produit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'produit_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\ParProduitController::deleteAction',  ),  2 =>   array (    '_method' => 'POST|DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/produit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'workflow' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\WorkflowController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/workflow/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'workflow_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\WorkflowController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/workflow',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'workflow_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\WorkflowController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/workflow/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'workflow_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\WorkflowController::createAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/workflow/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'workflow_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\WorkflowController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/workflow',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'workflow_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\WorkflowController::updateAction',  ),  2 =>   array (    '_method' => 'POST|PUT',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/workflow',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'workflow_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\WorkflowController::deleteAction',  ),  2 =>   array (    '_method' => 'POST|DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/workflow',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'production_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'production_homepage_test' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\ProductionBundle\\Controller\\DefaultController::testAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/test',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/app/example',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\UserBundle\\Controller\\SecurityController::loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\UserBundle\\Controller\\SecurityController::checkAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login_check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\UserBundle\\Controller\\SecurityController::logoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_show' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\UserBundle\\Controller\\ProfileController::showAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_edit' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\UserBundle\\Controller\\ProfileController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_register' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\UserBundle\\Controller\\RegistrationController::registerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\UserBundle\\Controller\\RegistrationController::checkEmailAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirm' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'Production\\UserBundle\\Controller\\RegistrationController::confirmAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/register/confirm',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirmed' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\UserBundle\\Controller\\RegistrationController::confirmedAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/confirmed',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_request' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\UserBundle\\Controller\\ResettingController::requestAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/request',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_send_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\UserBundle\\Controller\\ResettingController::sendEmailAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/send-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\UserBundle\\Controller\\ResettingController::checkEmailAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_reset' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'Production\\UserBundle\\Controller\\ResettingController::resetAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/resetting/reset',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_change_password' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\UserBundle\\Controller\\ChangePasswordController::changePasswordAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/change-password/change-password',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_autocomplete' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BenUserBundle:User:autocomplete',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/users/autocomplete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_group_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\UserBundle\\Controller\\GroupController::listAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/group/list',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_group_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\UserBundle\\Controller\\GroupController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/group/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_group_show' => array (  0 =>   array (    0 => 'groupname',  ),  1 =>   array (    '_controller' => 'Production\\UserBundle\\Controller\\GroupController::showAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'groupname',    ),    1 =>     array (      0 => 'text',      1 => '/group',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_group_edit' => array (  0 =>   array (    0 => 'groupname',  ),  1 =>   array (    '_controller' => 'Production\\UserBundle\\Controller\\GroupController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'groupname',    ),    2 =>     array (      0 => 'text',      1 => '/group',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_group_delete' => array (  0 =>   array (    0 => 'groupname',  ),  1 =>   array (    '_controller' => 'Production\\UserBundle\\Controller\\GroupController::deleteAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'groupname',    ),    2 =>     array (      0 => 'text',      1 => '/group',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ben_users' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\UserBundle\\Controller\\AdminController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/manage/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ben_users_ajax' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\UserBundle\\Controller\\AdminController::ajaxListAction',  ),  2 =>   array (    '_method' => 'post',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/manage/userslist',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ben_show_user' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Production\\UserBundle\\Controller\\AdminController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/manage/show',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ben_new_user' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\UserBundle\\Controller\\AdminController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/manage/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ben_add_user' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\UserBundle\\Controller\\AdminController::addAction',  ),  2 =>   array (    '_method' => 'post',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/manage/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ben_edit_user' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Production\\UserBundle\\Controller\\AdminController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/manage/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ben_update_user' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Production\\UserBundle\\Controller\\AdminController::updateAction',  ),  2 =>   array (    '_method' => 'post',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/manage/update',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ben_users_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\UserBundle\\Controller\\AdminController::usersListAction',  ),  2 =>   array (    '_method' => 'post',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/manage/users/list',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ben_enable_users' => array (  0 =>   array (    0 => 'etat',  ),  1 =>   array (    '_controller' => 'Production\\UserBundle\\Controller\\AdminController::enableUsersAction',    'etat' => 1,  ),  2 =>   array (    '_method' => 'post',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'etat',    ),    1 =>     array (      0 => 'text',      1 => '/manage/users/active',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ben_promote_users' => array (  0 =>   array (    0 => 'role',  ),  1 =>   array (    '_controller' => 'Production\\UserBundle\\Controller\\AdminController::setRoleAction',    'role' => 'user',  ),  2 =>   array (    '_method' => 'post',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'role',    ),    1 =>     array (      0 => 'text',      1 => '/manage/promote',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ben_delete_user' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Production\\UserBundle\\Controller\\AdminController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/manage/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ben_remove_users' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\UserBundle\\Controller\\AdminController::removeUsersAction',  ),  2 =>   array (    '_method' => 'post',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/manage/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ben_users_export' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Production\\UserBundle\\Controller\\AdminController::exportAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/manage/export',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ben_profile_edit' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'Production\\UserBundle\\Controller\\AdminController::editMeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/manage/me/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ben_profile_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Production\\UserBundle\\Controller\\AdminController::updateMeAction',  ),  2 =>   array (    '_method' => 'post',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/manage/_me',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ben_pdf' => array (  0 =>   array (    0 => 'users',  ),  1 =>   array (    '_controller' => 'Production\\UserBundle\\Controller\\AdminController::pdfAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'users',    ),    1 =>     array (      0 => 'text',      1 => '/manage/pdf',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ben_badge_user' => array (  0 =>   array (    0 => 'users',  ),  1 =>   array (    '_controller' => 'Production\\UserBundle\\Controller\\AdminController::showBadgeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'users',    ),    1 =>     array (      0 => 'text',      1 => '/manage/badge',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
    );

    /**
     * Constructor.
     */
    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
    }

    public function generate($name, $parameters = array(), $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens, $requiredSchemes) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens, $requiredSchemes);
    }
}
